import java.time.Instant

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot'
    id "org.flywaydb.flyway"
    id "org.sonarqube"
    id "com.moowork.node"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'pmd'

group = serviceGroup
version = serviceVersion
archivesBaseName = serviceName
project.ext.buildTime = Instant.now().toString() // for versioning
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts/" }
    maven { url "http://jasperreports.sourceforge.net/maven2/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://10.0.0.91:8091/repository/maven-public/" }
}

dependencies {
    compile project(":common")
    compile 'org.openlmis:siglus-api-extension:1.22'
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate4"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "net.sf.jasperreports:jasperreports:6.3.0"
    compile "org.postgresql:postgresql:42.2.6"
    compile "org.projectlombok:lombok:1.18.8"
    compile "org.slf4j:slf4j-ext:1.7.26"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.security.oauth:spring-security-oauth2"
    compile 'commons-io:commons-io:2.6'
    compile 'org.apache.commons:commons-collections4:4.3'
    compile 'org.apache.commons:commons-csv:1.7'
    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'org.flywaydb:flyway-core:4.1.2'
    compile 'org.hibernate:hibernate-java8'
    compile 'org.jadira.usertype:usertype.core:5.0.0.GA'
    compile 'org.javers:javers-spring-boot-starter-sql:3.11.6'
    compile 'org.joda:joda-money:0.12'
    compile 'org.openlmis:openlmis-service-util:3.0.0'
    compile 'org.springframework.boot:spring-boot-starter-data-redis:1.5.21.RELEASE'
    compile 'org.springframework:spring-context-support'
    compile 'org.webjars.npm:api-console:3.0.17'

    compileTestJava.dependsOn tasks.getByPath(':common:classes')
    testCompile project(':common').sourceSets.main.output

    testCompile "be.joengenduvel.java.verifiers:to-string:1.0.2"
    testCompile "com.github.tomakehurst:wiremock:1.58"
    testCompile "com.jayway.restassured:rest-assured:2.7.0"
    testCompile "guru.nidi.raml:raml-tester:0.8.9"
    testCompile "junit:junit"
    testCompile "nl.jqno.equalsverifier:equalsverifier:2.4"
    testCompile "org.assertj:assertj-core:3.12.2"
    testCompile "org.javassist:javassist:3.20.0-GA"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "org.powermock:powermock-api-mockito:1.6.5"
    testCompile "org.powermock:powermock-module-junit4:1.6.5"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.springframework:spring-test"
}

jacocoTestReport {
    group = "reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled false
        html.enabled true
        csv.enabled false
    }
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}

sonarqube {
    skipProject = true
}

checkstyle {
    toolVersion = "8.12"
}

pmd {
    toolVersion = '5.4.0'
    consoleOutput= true
    ignoreFailures = false
    ruleSetFiles = files("config/pmd/ruleset.xml")
    reportsDir = file("build/reports/pmd")
}

assemble {
    dependsOn jacocoTestReport
}