#%RAML 0.8
---
title: SIGLUS API
version: "@version@"
baseUri: "@baseUrl@"
protocols: [ HTTP, HTTPS ]

documentation:
  - title: Getting Started
    content: Welcome to the SIGLUS API documentation. This minimal API is intended for illustrative purposes.

schemas:
  - localizedErrorResponse: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-04/schema",
        "title": "LocalizedErrorResponse",
        "description": "Localized Error response",
        "properties": {
          "message": { "type": "string", "title": "error message" },
          "messageKey": { "type": "string", "title": "key for translations" },
          "fieldErrors": {
            "type": "object",
            "title": "FieldErrors",
            "description": "Field errors"
          }
        },
        "required": ["messageKey", "message"]
      }
  - orderablePage: |
      {
        "type": "array",
        "items": { "type": "object", "$ref": "schemas/orderable.json" }
      }
  - program: !include schemas/program.json
  - stockEventDto: !include schemas/stockEventDto.json
  - validSourceDestinations: |
      {
        "type": "array",
        "items": { "type": "object", "$ref": "schemas/validSourceDestination.json" }
      }
  - validReasonAssignments: |
      {
         "type": "array",
         "items": { "type": "object", "$ref": "schemas/validReasonAssignment.json" }
      }
  - siglusOrdeableKitDto: |
      {
         "type": "array",
         "items": { "type": "object", "$ref": "schemas/siglusOrdeableKitDto.json" }
      }
  - orderableInKitDto: !include schemas/orderableInKitDto.json
  - physicalInventory: !include schemas/physicalInventory.json
  - physicalInventories: |
      {
        "type": "array",
        "items": { "type": "object", "$ref": "schemas/physicalInventory.json" }
      }
  - programArray: |
      {
        "type": "array",
        "items": { "type": "object", "$ref": "schemas/program.json" }
      }
  - uuid: |
      {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      }
  - stockCard: !include schemas/stockCard.json
  - stockManagementDraft: !include schemas/stockManagementDraft.json
  - stockCardSummariesPage: !include schemas/stockCardSummaryV2Page.json
  - facilityProductMovementsResponse: !include schemas/facilityProductMovementsResponse.json
  - arrayOfStrings: |
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
  - requisitionTemplate: !include schemas/requisitionTemplate.json
  - requisitionTemplateArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/requisitionTemplate.json" }
      }
  - processingPeriod: !include schemas/processingPeriod.json
  - processingPeriodPage: !include schemas/processingPeriodPage.json
  - processingPeriodDto: !include schemas/processingPeriodDto.json
  - basicRequisitionDto: !include schemas/basicRequisitionDto.json
  - basicRequisitionDtoPage: !include schemas/basicRequisitionDtoPage.json
  - orderDto: !include schemas/orderDto.json
  - orderList: |
      {
        "type": "array",
        "items": { "type": "object", "$ref": "schemas/orderDto.json" }
      }
  - basicOrderDtoPage: !include schemas/basicOrderDtoPage.json
  - shipmentDraft: !include schemas/shipmentDraft.json
  - shipment: !include schemas/shipment.json
  - notifications: |
      {
        "type": "array",
        "items": { "type": "object", "$ref": "schemas/notificationDto.json" }
      }
  - proofOfDeliveryDto: !include schemas/proofOfDeliveryDto.json
  - facilityList: |
      {
        "type": "array",
        "items": { "type": "object", "$ref": "schemas/facility.json" }
      }
  - programAdditionalOrderablePage: !include schemas/programAdditionalOrderablePage.json
  - programAdditionalOrderables: |
      {
        "type": "array",
        "items": { "type": "object", "$ref": "schemas/programAdditionalOrderable.json" }
      }
  - fcRequisitionPage: !include schemas/fcRequisitionPage.json
  - fcStockMovementPage: !include schemas/fcStockMovementPage.json
  - fcStockOnHandPage: !include schemas/fcStockOnHandPage.json
  - fcPodPage: !include schemas/fcPodPage.json
  - localizedMessage: !include schemas/localizedMessage.json
  - badRequestResponse: |
      {
          "oneOf": [{
            "type": "object",
            "$ref": "schemas/localizedMessage.json"
          }, {
            "type": "array",
            "items": { "type": "object", "$ref": "schemas/localizedMessage.json" }
          }]
      }
  - issueVoucher: !include schemas/issueVoucher.json
  - proofOfDeliveryPage: !include schemas/proofOfDeliveryPage.json
  - productSyncResponse: !include schemas/productSyncResponse.json
  - facilityResponse: !include schemas/facilityResponse.json
  - regimenResponse: !include schemas/regimenResponse.json
  - hfCmmsDtos: !include schemas/hfCmmsDto.json
  - androidRequisitionRequest: !include schemas/androidRequisitionRequest.json
  - androidRequisitionResponse: !include schemas/androidRequisitionResponse.json
  - androidPodResponse: !include schemas/androidPodResponse.json
  - androidPodConfirmRequest: !include schemas/androidPodConfirmRequest.json
  - androidPodConfirmResponse: !include schemas/androidPodConfirmResponse.json
  - metabaseDashboardUrlResponse: !include schemas/metabaseUrlDto.json
  - draftListResponse: !include schemas/draftListResponse.json
resourceTypes:
  - collection:
      get:
        responses:
          200:
            description: Collection retrieved successfully
            headers:
              X-Content-Type-Options:
              X-XSS-Protection:
            body:
              application/json:
                schema: <<schema>>
          404:
            description: Collection is empty.
            headers:
              X-Content-Type-Options:
              X-XSS-Protection:
      post:
        body:
          application/json:
            schema: <<schema>>
        responses:
          201:
            description: Item created successfully
            headers:
              X-Content-Type-Options:
              X-XSS-Protection:
            body:
              application/json:
                schema: <<schema>>
  - member:
      get:
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
      post:
        body:
          application/json:
            schema: <<schema>>
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
      delete:
        responses:
          200:

traits:
  - secured:
      queryParameters:
        access_token:
          displayName: access_token
          description: OAuth2 access token
          type: string
          required: false
          repeat: false
      headers:
        Authorization:
          displayName: Authorization
          description: OAuth2 authorization token header. Takes the form of 'Bearer <token>'.
          type: string
          required: false
          repeat: false
  - paginated:
      queryParameters:
        page:
          description: The page number which should be displayed. Note that the first page is numbered zero rather than one. Additionally, negative and undefined values are interpreted as zero.
          type: integer
          required: false
          repeat: false
        size:
          description: The desired size of each page. This specifies the maximum number of values that should be returned by the server. Zero, undefined, and negative values should result in all possible values being returned.
          type: integer
          required: false
          repeat: false
  - expandable:
      queryParameters:
        expand:
          description: Allows to specify which reference fields should contain an expanded representation.
          type: string
          required: false
          repeat: true
  - sorted:
      queryParameters:
        sort:
          description: Sorting criteria in the format "property(,asc|desc)". Default sort order is ascending. Multiple sort criteria are supported.
          type: string
          required: false
          repeat: true
  - idempotent:
      headers:
        Idempotency-Key:
          displayName: Idempotency Key
          description: Idempotency Key in UUIDv4 format to avoid duplicated requests.
          type: string
          required: false
          repeat: false

/api:

  /siglusapi:
    /facilities:
      post:
        is: [ secured ]
        description: Search for facilities information
        responses:
          200:
            description: Information display
      /{facilityCode}/deviceInfo:
        uriParameters:
          facilityCode:
            displayName: facilityCode
            type: string
            required: true
            repeat: false
        delete:
          is: [ secured ]
          description: Remove android info by facilityCode
          responses:
            204:
              description: Android device successfully removed
      /{facilityId}:
        uriParameters:
          facilityId:
            displayName: facilityId
            type: string
            required: true
            repeat: false
        get:
          is: [ secured ]
          description: Get facility information
          responses:
            200:
              description: Facility information successfully load
        put:
          is: [ secured ]
          description: Save facility information
          responses:
            200:
              description: Facility information successfully upload
      /{facilityId}/locations:
        uriParameters:
          facilityId:
            displayName: facilityId
            type: string
            required: true
            repeat: false
        get:
          is: [ secured ]
          description: Download location management template
          responses:
            200:
              description: Location management successfully download
        post:
          is: [ secured ]
          description: Upload location management template
          responses:
            200:
              description: Location management successfully upload
      /initiate:
        post:
          is: [ secured ]
          description: Create new facility
          responses:
            200:
              description: A new facility has been created

    /data-migration/{facilityId}:
      /stock-cards:
        displayName: Submit stock cards for a specific facility
        post:
          is: [ secured ]
          body:
            application/json:
              schema: arrayOfStrings
          responses:
            201:
              description: submit success
      /cmms:
        displayName: submit cmms for a specific facility
        post:
          is: [ secured ]
          body:
            application/json:
              schema: arrayOfStrings
          responses:
            201:
              description: submit success
    /task/requisition:
      displayName: run requisition monthly report task
    /task/requisition/refresh:
      displayName: refresh requisition monthly report task
      post:
        is: [ secured ]
        body:
          application/json:
            schema: arrayOfStrings
        responses:
          201:
            description: submit success
    /report/tracerDrug:
      displayName: run tracer drug persistent data task
    /report/tracerDrug/refresh:
      displayName: refresh tracer drug persistent data task
      post:
        is: [ secured ]
        body:
          application/json:
            schema: arrayOfStrings
        responses:
          201:
            description: submit success
    /report/tracerDrug/initialize:
      displayName: initialize tracer drug persistent data task
      post:
        is: [ secured ]
        body:
          application/json:
            schema: arrayOfStrings
        responses:
          201:
            description: submit success
    /report/tracerDrug/exportFilter:
      displayName: get tracer drug export filter info
      get:
        is: [ secured ]
        body:
          application/json:
            schema: arrayOfStrings
        responses:
          200:
            description: success
    /report/tracerDrug/excel:
      displayName: get tracer drug excel
      get:
        is: [ secured ]
        body:
          application/json:
            schema: arrayOfStrings
        responses:
          200:
            description: success
    /report/historicalData/refresh:
      displayName: refresh historical data persistent data task
      post:
        is: [ secured ]
        body:
          application/json:
            schema: arrayOfStrings
        responses:
          201:
            description: submit success
    /programs:
      displayName: Program
      get:
        is: [ secured ]
        description: Get all programs.
        responses:
          "200":
            body:
              application/json:
                schema: programArray
      /{id}:
        uriParameters:
          id:
            displayName: id
            type: string
            required: true
            repeat: false
        get:
          is: [ secured ]
          description: Get chosen program.
          responses:
            "200":
              body:
                application/json:
            "404":
              body:
                application/json:
                  schema: localizedErrorResponse

    /stockMovement:
      displayName: StockMovement
      /{id}:
        uriParameters:
          id:
            displayName: id
            type: string
            required: true
            repeat: true
        get:
          is: [ secured, paginated ]
          description: >
            Get stock movement by facility id and orderable id.
          queryParameters:
            orderableId:
              displayName: orderable Id
              type: string
              required: false
              repeat: true
          responses:
            "200":
              body:
                application/json:
                  schema: stockmovementList


    /orderables:
      displayName: Orderable Product
      get:
        is: [ secured, paginated ]
        description: >
          Get all Orderable Products if no search params provided. Otherwise returns a paginated
          list of Orderables given either an Orderable Ids, a Program Code, a Name or a Code.
        queryParameters:
          id:
            displayName: orderable ID
            type: string
            required: false
            repeat: true
          code:
            displayName: orderable code
            type: string
            required: false
            repeat: false
          name:
            displayName: orderable name
            type: string
            required: false
            repeat: false
          program:
            displayName: program code
            type: string
            required: false
            repeat: false
        responses:
          "200":
            body:
              application/json:
                schema: orderablePage
          "304":
            description: Returned with no response body if no resource was modified since date provided in the If-Modified-Since request header.
          "400":
            body:
              application/json:
                schema: localizedErrorResponse

    /orderables/additionaltoadd:
      displayName: Additional Orderable Product To Add
      get:
        is: [ secured, paginated ]
        description: >
          Get all Orderable Products can be added to additional product if no search params
          provided. Otherwise returns a paginated list of Orderables given either a Name or a Code.
        queryParameters:
          code:
            displayName: orderable code
            type: string
            required: false
            repeat: false
          name:
            displayName: orderable name
            type: string
            required: false
            repeat: false
          programId:
            displayName: program id
            type: string
            required: true
            repeat: false
        responses:
          "200":
            body:
              application/json:
                schema: orderablePage

    /orderables/price:
      displayName: Get All Orderables' Price
      get:
        is: [ secured ]
        description: >
          Get all Orderables' price
        responses:
          "200":
            body:
              application/json:

    /validDestinations:
      get:
        is: [ secured ]
        description: Get a list of valid destinations of a program and a facility. The filtration works only if both params are provided. If no params are present all assignments are returned.
        queryParameters:
          programId:
            required: false
            description: Program ID, indicates the program that the valid destinations are under.
          facilityId:
            required: false
            description: Facility ID, indicates the facility that the valid destinations are under.
        responses:
          200:
            body:
              application/json:
                schema: validSourceDestinations
          400:
            description: Program or facility type does not exist.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to view valid destination.
            body:
              application/json:
                schema: localizedMessage

    /validSources:
      get:
        is: [ secured ]
        description: Get a list of valid sources of a program and a facility. The filtration works only if both params are provided. If no params are present all assignments are returned.
        queryParameters:
          programId:
            required: false
            description: Program ID, indicates the program that the valid sources are under.
          facilityId:
            required: false
            description: Facility ID, indicates the facility that the valid sources are under.
        responses:
          200:
            body:
              application/json:
                schema: validSourceDestinations
          400:
            description: Program or facility type does not exist.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to view valid sources.
            body:
              application/json:
                schema: localizedMessage

    /validReasons:
      get:
        is: [ secured ]
        description: Return a list of valid reasons based on program and facility type.
        queryParameters:
          program:
            description: Program id
            type: string
            required: false
          facilityType:
            description: Facility type id
            type: string
            required: false
          reasonType:
            description: Reason type
            type: string
            required: false
            repeat: true
            enum:
              - CREDIT
              - DEBIT
              - BALANCE_ADJUSTMENT
          reason:
            description: Stock card line item reason id
            type: string
            required: false
        responses:
          200:
            description: Valid reason response
            body:
              application/json:
                schema: validReasonAssignments
          400:
            description: Facility type or program is not found.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: Facility type given is no match with home facility or given program is not supported by home facility.
            body:
              application/json:
                schema: localizedMessage

    /unpackKits:
      get:
        is: [ secured ]
        description: Get a list of saved stock management kit products. If products do not exist, will return empty list.
        queryParameters:
          facilityId:
            required: true
        responses:
          200:
            description: list of stock management kit products.
            body:
              application/json:
                schema: siglusOrdeableKitDto

    /unpackKit:
      get:
        is: [ secured ]
        description: Get a kit product. If products do not exist, will return empty list.
        queryParameters:
          facilityId:
            required: true
          orderableId:
            required: true
        responses:
          200:
            description: kit product.
            body:
              application/json:
                schema: stockManagementDraft

    /orderableInKit:
      displayName: orderableInKit
      get:
        is: [ secured ]
        description: Get all orderableInKit.
        queryParameters:
          kitProductId:
            displayName: kitProductId
            description: The UUID of the Trade Item.
            type: string
            required: true
            repeat: false
        responses:
          "200":
            body:
              application/json:
                schema: orderableInKitDto

    /physicalInventories:
      get:
        is: [ secured ]
        description: Get a list of saved physical inventory. If inventories do not exist, will return empty list.
        queryParameters:
          facility:
            required: true
          program:
            required: true
          isDraft:
            required: false
        responses:
          200:
            description: list of physical inventories.
            body:
              application/json:
                schema: physicalInventories
          403:
            description: User does not have permission to view draft physical inventory.
            body:
              application/json:
                schema: localizedMessage
          406:
            description: initial inventory has been created.
            body:
              application/json:
                schema: localizedMessage
      post:
        is: [ secured ]
        description: Create empty draft physical inventory and assign multiple drafts for multiuser. Only one draft is allowed at the same time for one facility&program.
        body:
          application/json:
            schema: physicalInventory
        queryParameters:
          splitNum:
            required: true
            description: splitNum entered by the user
            repeat: false
            type: integer
        responses:
          201:
            description: Draft saved.
            body:
              application/json:
                schema: physicalInventory
          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.
          403:
            description: User does not have permission to save draft physical inventory.
            body:
              application/json:
                schema: localizedMessage

    /physicalInventories/{id}:
      uriParameters:
        id:
          displayName: physicalInventoryId
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: Get a physical inventory with format specified in query param. Json format is default.
        queryParameters:
          format:
            description: "This parameter specifies return format of this endpoint. If it is not specified json format is returned. Supported types: csv, html, pdf, xls, xlsx."
            type: string
            required: false
            repeat: false
        responses:
          200:
            body:
              application/pdf:
              application/json:
                schema: physicalInventory
          404:
            body:
              application/json:
                schema: localizedMessage
          403:
            body:
              application/json:
                schema: localizedMessage
      put:
        is: [ secured ]
        description: Save a draft physical inventory. Only one draft is allowed at the same time for one facility&program.
        body:
          application/json:
            schema: physicalInventory
        responses:
          200:
            description: Draft saved.
            body:
              application/json:
                schema: physicalInventory
          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.
          403:
            description: User does not have permission to save draft physical inventory.
            body:
              application/json:
                schema: localizedMessage
      delete:
        is: [ secured ]
        description: Delete a draft physical inventory.

        responses:
          204:
            description: Draft deleted.
          400:
            description: Physical inventory is submittted.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to delete draft physical inventory.
            body:
              application/json:
                schema: localizedMessage
          404:
            description: Physical inventory not found.
            body:
              application/json:
                schema: localizedMessage

    /stockEvents:
      post:
        is: [ secured ]
        description: Create a new stock event with one or more orderables.
        body:
          application/json:
            schema: stockEventDto
        responses:
          201:
            description: Stock event has been processed with no validatoin error or persistence error.
            body:
              application/json:
                schema: uuid
          400:
            description: Failed to process stock event due to validation error.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to create stock events for given facility and program.
            body:
              application/json:
                schema: localizedMessage

    /stockEvents/multiUser:
      post:
        is: [ secured ]
        description: Create a new stock event with one or more orderables for multi-user.
        body:
          application/json:
            schema: stockEventForMultiUserDto
        responses:
          201:
            description: Stock event has been processed with no validatoin error or persistence error.
            body:
              application/json:
                schema: uuid
          400:
            description: Failed to process stock event due to validation error.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to create stock events for given facility and program.
            body:
              application/json:
                schema: localizedMessage

    /drafts:
      get:
        is: [ secured ]
        description: Get a list of saved stock management draft. If drafts do not exist, will return empty list.
        queryParameters:
          facility:
            required: true
          program:
            required: true
          isDraft:
            required: false
        responses:
          200:
            description: list of stock management drafts.
            body:
              application/json:
                schema: stockManagementDraft
          403:
            description: User does not have permission to view draft stock management.
            body:
              application/json:
                schema: localizedMessage
      delete:
        is: [ secured ]
        description: Delete a draft physical inventory.
        responses:
          204:
            description: Draft deleted.
          404:
            description: stock management Draft not found.
            body:
              application/json:
                schema: localizedMessage
      post:
        is: [ secured ]
        description: Create empty draft stock management inventory. Only one draft is allowed at the same time for one facility&program&user.
        body:
          application/json:
            schema: stockManagementDraft
        responses:
          201:
            description: Draft saved.
            body:
              application/json:
                schema: stockManagementDraft
          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.

    /drafts/{id}:
      put:
        is: [ secured ]
        description: Save a draft stock management draft. Only one draft is allowed at the same time for one facility&program.
        body:
          application/json:
            schema: stockManagementDraft

        responses:
          200:
            description: Draft saved.
            body:
              application/json:
                schema: stockManagementDraft
          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.

          403:
            description: User does not have permission to save draft stock management.
            body:
              application/json:
                schema: localizedMessage

    /drafts/{initialDraftId}/subDraft/{subDraftId}/submit:
      put:
        is: [ secured ]
        description: Update a stock management sub-draft. Only one sub-draft is allowed at the same time for one specific initial draft.
        body:
          application/json:
            schema: stockManagementDraft

        responses:
          200:
            description: Draft updated.
            body:
              application/json:
                schema: stockManagementDraft
          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.

          403:
            description: User does not have permission to update stock management sub-draft.
            body:
              application/json:
                schema: localizedMessage

    /drafts/{initialDraftId}/subDraft/merge:
      get:
        is: [ secured ]
        description: merge all sub-drafts line items and return.
        responses:
          200:
            description: return all line items of sub-drafts.

          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.

          403:
            description: User does not have permission to update stock management sub-draft.
            body:
              application/json:
                schema: localizedMessage

    /drafts/initial/{initialDraftId}:
      delete:
        is: [ secured ]
        description: Delete a initial draft and all sub-drafts.
        responses:
          204:
            description: Draft deleted.
          404:
            description: stock management Draft not found.
            body:
              application/json:
                schema: localizedMessage

    /archivedproducts/{orderableId}/archive:
      post:
        is: [ secured ]
        description: Archive product.
        responses:
          200:
            description: Product archived.

    /archivedproducts/{orderableId}/activate:
      post:
        is: [ secured ]
        description: Activate product.
        responses:
          200:
            description: Product activated.

    /archivedproducts:
      get:
        is: [ secured ]
        description: Get archived products.
        queryParameters:
          facilityId:
            required: true
            description: facility id
            repeat: false
            type: string
        responses:
          200:
            description: return archived products.

    /stockCards/orderable:
      get:
        is: [ secured ]
        description: Get full details of one stock card.
        responses:
          200:
            body:
              application/json:
                schema: stockCard
          404:
            description: Stock card with given id does not exist.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to view stock card.
            body:
              application/json:
                schema: localizedMessage

    /draftList:
      get:
        is: [ secured ]
        description: Get subDrafts belongs to the program and facility.
        queryParameters:
          program:
            required: true
            description: program id
            repeat: false
            type: string
          facility:
            required: true
            description: facility id
            repeat: false
            type: string
          isDraft:
            required: false
            description: is draft
            repeat: false
            type: boolean
        responses:
          200:
            body:
              application/json:
                schema: draftListResponse

    /subDraft:
      get:
        is: [ secured ]
        description: Get subDraft detail.
        queryParameters:
          subDraftIds:
            required: true
            description: subDraftId List
            repeat: false
            type: string
        responses:
          200:
            body:
              application/json:
                schema: physicalInventory

    /stockCards/{id}:
      get:
        is: [ secured ]
        description: Get full details of one stock card.
        responses:
          200:
            body:
              application/json:
                schema: stockCard
          404:
            description: Stock card with given id does not exist.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to view stock card.
            body:
              application/json:
                schema: localizedMessage

    /stockCards/{id}/print:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: Get stock card by lot report in PDF format to print.
        responses:
          200:
            body:
              application/pdf:
          403:
            description: User does not have permission to get stock card report.
            body:
              application/json:
                schema: localizedMessage
          404:
            description: Stock card with given id does not exist, can not get report.
            body:
              application/json:

    /orderable/{id}/print:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: Get stock card report by orderable in PDF format to print.
        responses:
          200:
            body:
              application/pdf:
          403:
            description: User does not have permission to get stock card report.
            body:
              application/json:
                schema: localizedMessage
          404:
            description: Stock card with given id does not exist, can not get report.
            body:
              application/json:

    /initialInventory:
      get:
        is: [ secured ]
        description: If this facility doesn't have any stock movements before , then can initital inventory
        queryParameters:
          facility:
            required: true
            description: facility id
            repeat: false
            type: string
        responses:
          200:
            body:
              application/json:
                schema: physicalInventory


    /dashboard:
      get:
        is: [ secured ]
        description: Get Metabase Dashboard Url according user rights
        queryParameters:
          dashboardName:
            required: true
            description: dashboard name
            repeat: false
            type: string
        responses:
          200:
            body:
              application/json:
                schema: metabaseDashboardUrlResponse


    /stockCardSummaries:
      get:
        is: [ secured, paginated ]
        description: Get summaries of stock cards, which contains SOH, product name, and other essential information. This will NOT return any line items. (This could be used by front end for list view.)
        queryParameters:
          facilityId:
            required: true
            description: Facility id, indicates the facility that the queried stock card summaries should belong to.
            repeat: false
            type: string
          programId:
            required: false
            description: Program id, indicates the program that the queries stock card summaries is under.
            repeat: false
            type: string
          orderableId:
            required: false
            description: Orderable id, indicates the orderable that the queries stock card summaries is under, can specify multiple orderable ids.
            repeat: true
            type: string
          asOfDate:
            required: false
            description: Stock Card data will be calculated as of given date.
            repeat: false
            type: string
          nonEmptyOnly:
            required: false
            description: Flag defining whether only summaries with non empty set of canFulfillForMe should be returned. Defaults to false.
            repeat: false
            type: boolean
        responses:
          200:
            body:
              application/json:
                schema: stockCardSummariesPage
          400:
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to view stock cards of given facility and program.
            body:
              application/json:
                schema: localizedMessage

      /print:
        get:
          is: [ secured ]
          description: Get stock card summary report in PDF format to print.
          queryParameters:
            facility:
              required: true
              description: Facility id
            program:
              required: true
              description: Program id
          responses:
            200:
              description: Stock card summary report generated successfully.
              body:
                application/pdf:
            404:
              description: No stock cards were found that matches given facility and program.
              body:
                application/json:
                  schema: localizedMessage
            403:
              description: User does not have permission to get stock card summary report.
              body:
                application/json:
                  schema: localizedMessage

    /stockCardSummaries/lots:
      post:
        is: [ secured ]
        description: Get lots by orderableIds
        queryParameters:
          facilityId:
            required: true
            description: Facility id, indicates the facility that the queried stock card summaries should belong to.
            repeat: false
            type: string
          programId:
            required: false
            description: Program id, indicates the program that the queries stock card summaries is under.
            repeat: false
            type: string
        responses:
          200:
            body:
              application/json:
          400:
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to view integration of stock cards and orderables of given facility and program.
            body:
              application/json:
                schema: localizedMessage

    /stockCardSummaries/integration:
      get:
        is: [ secured, paginated ]
        description: Get integration with summaries of stock cards and orderables
        queryParameters:
          facilityId:
            required: true
            description: Facility id, indicates the facility that the queried stock card summaries should belong to.
            repeat: false
            type: string
          programId:
            required: false
            description: Program id, indicates the program that the queries stock card summaries is under.
            repeat: false
            type: string
        responses:
          200:
            body:
              application/json:
          400:
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to view integration of stock cards and orderables of given facility and program.
            body:
              application/json:
                schema: localizedMessage

    /stockCardSummaries/integration/flatten:
      get:
        is: [ secured, paginated ]
        description: Get integration with summaries of stock cards and orderables but not group
        queryParameters:
          facilityId:
            required: true
            description: Facility id, indicates the facility that the queried stock card summaries should belong to.
            repeat: false
            type: string
          programId:
            required: false
            description: Program id, indicates the program that the queries stock card summaries is under.
            repeat: false
            type: string
        responses:
          200:
            body:
              application/json:
          400:
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to view integration of stock cards and orderables of given facility and program.
            body:
              application/json:
                schema: localizedMessage

    /physicalInventories/latest:
      get:
        is: [ secured ]
        description: Get the latest physical inventory ocuur date.
        queryParameters:
          facility:
            required: true
        responses:
          200:
            description: the latest physical inventory ocuur date.
            body:
              application/json:
                schema: physicalInventory

    /physicalInventories/conflict:
      get:
        is: [ secured ]
        description: check physical inventory program conflict
        queryParameters:
          program:
            required: true
            description: program id
            repeat: false
            type: string
          facility:
            required: true
            description: facility id
            repeat: false
            type: string
          isDraft:
            required: false
            description: is draft
            repeat: false
            type: boolean
        responses:
          200:
            body:
              application/pdf:

    /physicalInventories/dates:
      get:
        is: [ secured ]
        description: Get the physical inventory ocuur date.
        queryParameters:
          facilityId:
            required: true
          startDate:
            required: true
          endDate:
            required: true
        responses:
          200:
            description: the latest physical inventory ocuur date.
            body:
              application/json:
                schema: arrayOfStrings

    /processingPeriods:
      displayName: Processing Period
      get:
        is: [ secured, paginated, sorted ]
        description: >
          Get all processing periods that match the given parameters. The processingScheduleId
          parameter should not be used together with facilityId and programId parameters because
          all of them are used to find a processing schedule. Also the facilityId and programId
          parameters must be used together.
        queryParameters:
          programId:
            displayName: program
            type: string
            required: false
            repeat: false
          facilityId:
            displayName: facility
            type: string
            required: false
            repeat: false
          processingScheduleId:
            displayName: processingSchedule
            type: string
            required: false
            repeat: false
          startDate:
            displayName: startDate
            type: string
            required: false
            repeat: false
          endDate:
            displayName: endDate
            type: string
            required: false
            repeat: false
          id:
            displayName: id
            type: string
            required: false
            repeat: true
        responses:
          "200":
            body:
              application/json:
                schema: processingPeriodPage
          "400":
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            body:
              application/json:
      post:
        is: [ secured ]
        description: Creates given processingPeriod if possible.
        body:
          application/json:
        responses:
          "201":
            body:
              application/json:
          "400":
            body:
              application/json:
                schema: localizedErrorResponse
          "403":
            body:
              application/json:
                schema: localizedErrorResponse

    /processingPeriods/{id}:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: Get chosen processingPeriod.
        responses:
          "200":
            body:
              application/json:
                schema: processingPeriod
          401:
            body:
              application/json:
          "404":
            body:
              application/json:
                schema: localizedErrorResponse
      put:
        is: [ secured ]
        description: Update existing processingPeriod.
        body:
          application/json:
        responses:
          "200":
            body:
              application/json:
                schema: processingPeriod
          "400":
            body:
              application/json:
                schema: localizedErrorResponse
          "403":
            body:
              application/json:
                schema: localizedErrorResponse

    /requisitionTemplates:
      post:
        is: [ secured ]
        description: Creates new requisitionTemplate.
        body:
          application/json:
            schema: requisitionTemplate
        responses:
          "201":
            body:
              application/json:
                schema: requisitionTemplate
          "400":
            body:
              application/json:
          "403":
            body:
              application/json:
                schema: localizedMessage

    /requisitionTemplates/{id}:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: Get chosen requisitionTemplate.
        responses:
          "200":
            body:
              application/json:
                schema: requisitionTemplate
          "404":
            body:
              application/json:
                schema: localizedMessage
      put:
        is: [ secured ]
        description: Update existing requisitionTemplate.
        body:
          application/json:
            schema: requisitionTemplate
        responses:
          "200":
            body:
              application/json:
                schema: requisitionTemplate
          "400":
            body:
              application/json:
          "403":
            body:
              application/json:
                schema: localizedMessage

    /requisitions/search:
      displayName: Requisition
      get:
        is: [ secured, paginated ]
        description: Find requisitions matching all of provided parameters.
        queryParameters:
          facility:
            displayName: facility
            type: string
            required: false
            repeat: false
          program:
            displayName: program
            type: string
            required: false
            repeat: false
          initiatedDateFrom:
            displayName: initiatedDateFrom
            type: string
            required: false
            repeat: false
          initiatedDateTo:
            displayName: initiatedDateTo
            type: string
            required: false
            repeat: false
          modifiedDateFrom:
            displayName: modifiedDateFrom
            type: string
            required: false
            repeat: false
          modifiedDateTo:
            displayName: modifiedDateTo
            type: string
            required: false
            repeat: false
          processingPeriod:
            displayName: processingPeriod
            type: string
            required: false
            repeat: false
          supervisoryNode:
            displayName: supervisoryNode
            type: string
            required: false
            repeat: false
          requisitionStatus:
            displayName: supervisoryNode
            type: string
            required: false
            repeat: true
          emergency:
            displayName: emergency
            type: boolean
            required: false
            repeat: false
        responses:
          "200":
            body:
              application/json:
                schema: basicRequisitionDtoPage
          "400":
          "500":

    /requisitions/initiate:
      post:
        is: [ secured, idempotent ]
        description: Initiate requisition.
        queryParameters:
          program:
            displayName: Program
            type: string
            required: true
            repeat: false
          facility:
            displayName: Facility
            type: string
            required: true
            repeat: false
          suggestedPeriod:
            displayName: Suggested period
            type: string
            required: false
            repeat: false
          emergency:
            displayName: Emergency
            type: boolean
            required: true
            repeat: false
          physicalInventoryDate:
            displayName: physicalInventoryDate
            type: boolean
            required: false
            repeat: false
        responses:
          201:
            description: The request is valid and the given requisition has been created.
            body:
              application/json:
                schema: basicRequisitionDto
          400:
            description: The request's body is invalid
            body:
              application/json:
                schema: localizedMessage
          401:
            description: The request does not contain a token or the token might be invalid.
            body:
              application/json:
          403:
            description: The server understood the request but refuses to authorize it.
            body:
              application/json:
                schema: localizedMessage
          409:
            description: There is a conflict while the request is handled.
            body:
              application/json:
                schema: localizedMessage

    /requisitions/{id}:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      delete:
        is: [ secured ]
        description: Delete chosen requisition.
        responses:
          "204":
          "400":
            body:
              application/json:
                schema: localizedMessage
          "404":
            body:
              application/json:
                schema: localizedMessage
          "409":
          "403":
            body:
              application/json:
                schema: localizedMessage
      get:
        is: [ secured ]
        description: Get chosen requisition.
        responses:
          200:
            description: The request is valid and the given requisition will be returned.
            body:
              application/json:
                schema: basicRequisitionDto
          401:
            description: The request does not contain a token or the token might be invalid.
            body:
              application/json:
          403:
            description: The server understood the request but refuses to authorize it.
            body:
              application/json:
                schema: localizedMessage
          404:
            description: The server understood the request but can not find the requisition.
            body:
              application/json:
                schema: localizedMessage
      put:
        is: [ secured ]
        description: Update existing requisition. Do not change invariants – id, createdDate, facility, program, supplyingFacility, status, emergency, supervisoryNode, orderableId of line item, such attempts will be ignored.
        body:
          application/json:
            schema: basicRequisitionDto
        responses:
          200:
            description: The request is valid and the given requisition will be updated and returned.
            body:
              application/json:
                schema: basicRequisitionDto
          400:
            description: The request's body is invalid
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            description: The request does not contain a token or the token might be invalid.
            body:
              application/json:
          403:
            description: The server understood the request but refuses to authorize it.
            body:
              application/json:
                schema: localizedMessage
          404:
            description: The server understood the request but can not find the requisition.
            body:
              application/json:
                schema: localizedMessage
          409:
            description: There is a conflict while the request is handled.
            body:
              application/json:
                schema: localizedMessage

      /print:
        get:
          is: [ secured ]
          description: Print requisition to a pdf file.
          responses:
            "200":
              body:
                application/pdf:
            "404":
              body:
                application/json:

    /requisitions/periodsForInitiate:
      get:
        is: [ secured ]
        description: Find periods for initiate requisition.
        queryParameters:
          programId:
            displayName: program
            type: string
            required: true
            repeat: false
          facilityId:
            displayName: facility
            type: string
            required: true
            repeat: false
          emergency:
            displayName: emergency
            type: boolean
            required: true
            repeat: false
        responses:
          "200":
            body:
              application/json:
                schema: processingPeriodDto
          "400":
            body:
              application/json:
                schema: localizedMessage
          "403":
            body:
              application/json:
                schema: localizedMessage

    /requisitions/{id}/submit:
      post:
        is: [ secured, idempotent ]
        description: Submit earlier initiated requisition.
        responses:
          "200":
            body:
              application/json:
                schema: basicRequisitionDto
          "400":
            body:
              application/json:
          "403":
            body:
              application/json:
                schema: localizedMessage
          "409":
            body:
              application/json:
                schema: localizedMessage

    /requisitions/{id}/authorize:
      uriParameters:
        id:
          displayName: requisition Id
          type: string
          required: true
          repeat: false
      post:
        is: [ secured, idempotent ]
        description: Authorize submitted requisition.
        responses:
          "200":
            body:
              application/json:
                schema: basicRequisitionDto
          "400":
            body:
              application/json:
                schema: localizedMessage
          "404":
          "403":
            body:
              application/json:
                schema: localizedMessage
          "409":
            body:
              application/json:
                schema: localizedMessage

    /requisitions/{id}/approve:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      post:
        is: [ secured, idempotent ]
        description: Approve specified by id requisition.
        responses:
          "200":
            body:
              application/json:
                schema: basicRequisitionDto
          "400":
            body:
              application/json:
                schema: localizedMessage
          "403":
            body:
              application/json:
                schema: localizedMessage
          "409":
            body:
              application/json:
                schema: localizedMessage

    /requisitions/{id}/reject:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      put:
        is: [ secured, idempotent ]
        description: Reject requisition which is waiting for approval.
        responses:
          "200":
            body:
              application/json:
                schema: basicRequisitionDto
          "400":
            body:
              application/json:
                schema: localizedMessage
          "404":
            body:
              application/json:
                schema: localizedMessage
          "403":
            body:
              application/json:
                schema: localizedMessage
          "409":
            body:
              application/json:
                schema: localizedMessage

    /requisitions/createLineItem:
      post:
        is: [ secured, idempotent ]
        description: create LineItem for emergency requisition.
        queryParameters:
          requisitionId:
            displayName: requisitionId
            type: string
            required: true
            repeat: false
          orderableId:
            displayName: orderableId
            type: string
            required: true
            repeat: false
        responses:
          "201":
            body:
              application/json:
          "400":
            body:
              application/json:
                schema: localizedMessage
          "403":
            body:
              application/json:
                schema: localizedMessage
          "409":
            body:
              application/json:
                schema: localizedMessage

    /requisitions/requisitionsForApproval:
      get:
        is: [ secured, paginated, sorted ]
        description: Get requisitions to approve for right supervisor.
        queryParameters:
          program:
            displayName: program
            description: This parameter contains program UUID.
            type: string
            required: false
            repeat: false
        responses:
          "200":
            body:
              application/json:
                schema: basicRequisitionDtoPage
          "500":

    /requisitions/batchReleases:
      post:
        is: [ secured, idempotent ]
        description: convert to orders
        body:
          application/json:
            schema: basicRequisitionDtoPage
        responses:
          "201":
            body:
              application/json:
          "400":
            body:
              application/json:
                schema: localizedMessage
          "403":
            body:
              application/json:
                schema: localizedMessage
          "409":
            body:
              application/json:
                schema: localizedMessage

    /requisitions/facilitiesForApproval:
      get:
        is: [ secured ]
        description: Get facilities to approve
        responses:
          200:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: facilityList

    /orders:
      get:
        is: [ secured, paginated, sorted ]
        description: >
          Get all orders. This endpoint requires one of the following rights: ORDERS_EDIT,
          ORDERS_VIEW, SHIPMENT_EDIT, SHIPMENT_VIEW (for supplying facility) POD_MANAGE,
          POD_VIEW (for requesting facility)
        queryParameters:
          supplyingFacilityId:
            displayName: supplyingFacility
            description: supplyingFacility ID
            type: string
            required: false
            repeat: false
          requestingFacilityId:
            displayName: requestingFacility
            description: requestingFacility ID
            type: string
            required: false
            repeat: false
          programId:
            displayName: program
            description: program ID
            type: string
            required: false
            repeat: false
          processingPeriodId:
            displayName: processingPeriod
            description: processingPeriod ID
            type: string
            required: false
            repeat: false
          status:
            displayName: status
            description: Order status
            type: string
            required: false
            repeat: true
            enum:
              - ORDERED
              - FULFILLING
              - SHIPPED
              - RECEIVED
              - TRANSFER_FAILED
              - IN_ROUTE
              - READY_TO_PACK
          periodStartDate:
            displayName: periodStartDate
            type: string
            required: false
            repeat: false
          periodEndDate:
            displayName: periodEndDate
            type: string
            required: false
            repeat: false
        responses:
          200:
            body:
              application/json:
                schema: basicOrderDtoPage
          403:
            body:
              application/json:
                schema: localizedMessage
          404:
            body:
              application/json:
                schema: localizedMessage

    /orders/batch:
      post:
        is: [ secured, idempotent ]
        description: batch create orders
        body:
          application/json:
            schema: orderList
        responses:
          "201":
            body:
              application/json:
          "400":
            body:
              application/json:
                schema: localizedMessage
          "403":
            body:
              application/json:
                schema: localizedMessage
          "409":
            body:
              application/json:
                schema: localizedMessage

    /orders/{id}/status:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: get order by id
        responses:
          200:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: orderDto
          403:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: localizedMessage
          404:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: localizedMessage

    /orders/{id}:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: get order by id
        responses:
          200:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: orderDto
          403:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: localizedMessage
          404:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: localizedMessage
      put:
        is: [ secured ]
        description: Update order
        responses:
          200:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: orderDto
          404:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: localizedMessage
      /print:
        get:
          is: [ secured ]
          description: >
            Print all order line items from an order to a csv or pdf file. This endpoint
            requires one of the following rights: ORDERS_EDIT, ORDERS_VIEW, SHIPMENT_EDIT,
            SHIPMENT_VIEW (for supplying facility) POD_MANAGE, POD_VIEW (for requesting
            facility)
          queryParameters:
            format:
              displayName: format
              type: string
              required: true
              repeat: false
          responses:
            200:
              headers:
                Content-Disposition:
                Keep-Alive:
              body:
                application/pdf:
                text/csv:
            404:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedMessage
            403:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedMessage
      /export:
        get:
          is: [ secured ]
          description: >
            Export Order to csv. This endpoint requires one of the following rights:
            ORDERS_EDIT, ORDERS_VIEW, SHIPMENT_EDIT, SHIPMENT_VIEW (for supplying
            facility) POD_MANAGE, POD_VIEW (for requesting facility)
          queryParameters:
            type:
              displayName: type
              type: string
              required: false
              default: csv
              repeat: false
          responses:
            200:
              headers:
                Content-Disposition:
                Keep-Alive:
              body:
                text/csv:
            400:
              body:
                application/json:
            403:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedMessage
            404:
              headers:
                Keep-Alive:
              body:
                application/json:
    /orders/createLineItem:
      post:
        is: [ secured, idempotent ]
        description: create LineItem for emergency requisition.
        responses:
          "201":
            body:
              application/json:
          "400":
            body:
              application/json:
                schema: localizedMessage
          "403":
            body:
              application/json:
                schema: localizedMessage
          "409":
            body:
              application/json:
                schema: localizedMessage

    /shipmentDrafts:
      post:
        is: [ secured ]
        description: Create a shipment draft. Only one draft can exist in the system for a given order. This endpoint requires SHIPMENT_EDIT right.
        body:
          application/json:
            schema: shipmentDraft
        responses:
          201:
            description: Draft created.
            body:
              application/json:
                schema: shipmentDraft
          400:
            body:
              application/json:
                schema: localizedMessage
          401:
            body:
              application/json:
          403:
            body:
              application/json:
                schema: localizedMessage
      /{id}:
        uriParameters:
          id:
            displayName: id
            type: string
            required: true
            repeat: false
        put:
          is: [ secured ]
          description: Create or update shipment draft. This endpoint requires SHIPMENT_EDIT right.
          body:
            application/json:
              schema: shipmentDraft
          responses:
            200:
              description: Draft saved.
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: shipmentDraft
            400:
              body:
                application/json:
                  schema: localizedMessage
            401:
              body:
                application/json:
            403:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedMessage
        delete:
          is: [ secured ]
          description: Delete chosen shipment draft. This endpoint requires SHIPMENT_EDIT right.
          responses:
            204:
              headers:
                Keep-Alive:
            401:
              body:
                application/json:
            403:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedMessage
            404:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedMessage

    /shipments:
      post:
        is: [ secured ]
        description: Create a shipment. This endpoint requires SHIPMENT_EDIT right.
        body:
          application/json:
            schema: shipment
        responses:
          201:
            description: Shipment created.
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: shipment
          400:
            body:
              application/json:
                schema: localizedMessage
          401:
            body:
              application/json:
          403:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: localizedMessage
    /notifications:
      get:
        is: [ secured ]
        description: Get a list of notifications.
        queryParameters:
          size:
            type: integer
            required: false
            repeat: false
          latestOnTop:
            type: boolean
            required: false
            repeat: false
          type:
            type: string
            required: false
            repeat: false
        responses:
          200:
            description: list of notifications.
            body:
              application/json:
                schema: notifications
    /notifications/{id}:
      patch:
        is: [ secured ]
        description: view a single notification.
        queryParameters:
          id:
            displayName: id
            type: string
            required: true
            repeat: false
        responses:
          204:
            description: not viewed ye.
          410:
            description: already viewd
          409:
            description: already processed

    /proofsOfDelivery:
      displayName: Proof Of Delivery
      get:
        is: [ secured, paginated ]
        description: >
          Get proofs of delivery page. This endpoint requires one of the following rights:
          PODS_MANAGE, PODS_VIEW (for requesting facility), SHIPMENTS_EDIT (for supplying
          facility)
        queryParameters:
          orderId:
            displayName: orderId
            description: order ID
            type: string
            required: false
            repeat: false
          shipmentId:
            displayName: shipmentId
            description: shipment ID
            type: string
            required: false
            repeat: false
        responses:
          200:
            body:
              application/json:
                schema: proofOfDeliveryPage
          400:
            body:
              application/json:
                schema: badRequestResponse
          404:
          403:
            body:
              application/json:
                schema: localizedMessage

    /proofsOfDelivery/{id}:
      get:
        is: [ secured, expandable ]
        description: >
          Get chosen proofOfDelivery. This endpoint requires one of the following rights:
          PODS_MANAGE, PODS_VIEW (for requesting facility), SHIPMENTS_EDIT (for supplying
          facility)
        responses:
          200:
            body:
              application/json:
                schema: proofOfDeliveryDto
          404:
            body:
              application/json:
                schema: localizedMessage
          403:
            body:
              application/json:
                schema: localizedMessage
      put:
        is: [ secured ]
        description: update a single POD.
        body:
          application/json:
            schema: proofOfDeliveryDto
        responses:
          200:
            description: saved POD.
            body:
              application/json:
                schema: proofOfDeliveryDto

    /proofsOfDelivery/{id}/print:
      uriParameters:
        id:
          displayName: proofOfDeliveryId
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: >
          Print proof of delivery to a pdf file. This endpoint requires one of the
          following rights: PODS_MANAGE, PODS_VIEW (for requesting facility),
          SHIPMENTS_EDIT (for supplying facility)
        responses:
          200:
            body:
              application/pdf:
          400:
            body:
              application/json:
                schema: localizedMessage
          403:
            body:
              application/json:
                schema: localizedMessage

    /proofsOfDelivery/{id}/printInfo:
      uriParameters:
        id:
          displayName: proofOfDeliveryId
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: >
          get print info
        responses:
          200:
            body:
              application/json:
          400:
            body:
              application/json:
                schema: localizedMessage
          403:
            body:
              application/json:
                schema: localizedMessage

    /proofsOfDelivery/{id}/subDrafts:
      displayName: Proof Of Delivery - Create Sub Draft
      uriParameters:
        id:
          displayName: proofOfDeliveryId
          type: string
          required: true
          repeat: false
      post:
        is: [ secured ]
        description: >
          create proof of delivery sub draft
        responses:
          201:
            description: issueVouchers update.
            headers:
              Keep-Alive:
          400:
            body:
              application/json:
                schema: badRequestResponse
          404:
          403:
            body:
              application/json:
                schema: localizedMessage
      delete:
        is: [ secured ]
        description: >
          delete all proof of delivery sub draft by id
        responses:
          204:
            description: all sub draft deleted.

    /proofsOfDelivery/{id}/subDrafts/merge:
      displayName: Proof Of Delivery - merge all sub draft by proof of delivery
      uriParameters:
        id:
          displayName: proofOfDeliveryId
          type: string
          required: true
          repeat: false
      post:
        is: [ secured ]
        description: >
          merge all sub draft by proof of delivery
        responses:
          200:
            headers:
              Keep-Alive:
            body:
              application/json:
          400:
            body:
              application/json:
                schema: badRequestResponse
          404:
          403:
            body:
              application/json:
                schema: localizedMessage

    /proofsOfDelivery/{id}/subDrafts/submit:
      displayName: Proof Of Delivery - submit all sub draft by proof of delivery
      uriParameters:
        id:
          displayName: proofOfDeliveryId
          type: string
          required: true
          repeat: false
      post:
        is: [ secured ]
        description: >
          submit all sub draft by proof of delivery
        responses:
          200:
            headers:
              Keep-Alive:
            body:
              application/json:
          400:
            body:
              application/json:
                schema: badRequestResponse
          404:
          403:
            body:
              application/json:
                schema: localizedMessage

    /proofsOfDelivery/{id}/subDrafts/summary:
      displayName: Proof Of Delivery - search Sub Draft List
      uriParameters:
        id:
          displayName: proofOfDeliveryId
          type: string
          required: true
          repeat: false
      post:
        is: [ secured, paginated ]
        description: >
          search proof of delivery sub draft list
        responses:
          200:
            body:
              application/json:
          400:
            body:
              application/json:
                schema: badRequestResponse
          404:
          403:
            body:
              application/json:
                schema: localizedMessage

    /proofsOfDelivery/{id}/subDrafts/{subDraftId}:
      displayName: Proof Of Delivery - Sub Draft Detail
      uriParameters:
        id:
          displayName: proofOfDeliveryId
          type: string
          required: true
          repeat: false
        subDraftId:
          displayName: subDraftId
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: >
          get proof of delivery sub draft detail
        responses:
          200:
            body:
              application/json:
                schema: proofOfDeliveryDto
          400:
            body:
              application/json:
                schema: badRequestResponse
          404:
          403:
            body:
              application/json:
                schema: localizedMessage
      put:
        is: [ secured ]
        description: >
          update proof of delivery sub draft
        responses:
          204:
            description: sub draft updated.
      delete:
        is: [ secured ]
        description: >
          delete proof of delivery sub draft
        responses:
          204:
            description: sub draft deleted.

    /integration:
      /stockMovements:
        displayName: Get Stock Movements
        get:
          is: [ secured, paginated ]
          queryParameters:
            date:
              displayName: date
              type: string
              required: true
              repeat: false
            page:
              displayName: page
              type: integer
              required: false
              repeat: false
            size:
              displayName: size
              type: integer
              required: false
              repeat: false
          responses:
            200:
              body:
                application/json:
                  schema: fcStockMovementPage
      /stockOnHand:
        displayName: Get Stock On Hand
        get:
          is: [ secured, paginated ]
          queryParameters:
            date:
              displayName: date
              type: string
              required: true
              repeat: false
            page:
              displayName: page
              type: integer
              required: false
              repeat: false
            size:
              displayName: size
              type: integer
              required: false
              repeat: false
          responses:
            200:
              body:
                application/json:
                  schema: fcStockOnHandPage
      /requisitions:
        displayName: Get Requisitions
        get:
          is: [ secured, paginated ]
          queryParameters:
            date:
              displayName: date
              type: string
              required: true
              repeat: false
            page:
              displayName: page
              type: integer
              required: false
              repeat: false
            size:
              displayName: size
              type: integer
              required: false
              repeat: false
          responses:
            200:
              body:
                application/json:
                  schema: fcRequisitionPage

    /integration/pods:
      displayName: Get Requisitions
      get:
        is: [ secured, paginated ]
        queryParameters:
          date:
            displayName: date
            type: string
            required: true
            repeat: false
          page:
            displayName: page
            type: integer
            required: false
            repeat: false
          size:
            displayName: size
            type: integer
            required: false
            repeat: false
        responses:
          200:
            body:
              application/json:
                schema: fcPodPage

    /fc:
      /issueVouchers:
        displayName: update issueVouchers
        post:
          is: [ secured ]
          description: update issueVouchers from fc.
          responses:
            201:
              description: issueVouchers update.
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: issueVoucher
            400:
              body:
                application/json:
                  schema: localizedMessage
            401:
              body:
                application/json:
            403:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedMessage

      /receiptPlans:
        displayName: update issueVouchers
        post:
          is: [ secured ]
          description: update issueVouchers from fc.
          responses:
            201:
              description: issueVouchers update.
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: issueVoucher
            400:
              body:
                application/json:
                  schema: localizedMessage
            401:
              body:
                application/json:
            403:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedMessage

      /cmms:
        displayName: cmms From Fc
        post:
          is: [ secured ]
          description: Fetch cmms from fc.
          responses:
            200:

      /facilities:
        displayName: facilities From Fc
        post:
          is: [ secured ]
          description: Fetch fcFacility from fc.
          responses:
            200:

      /facilityTypes:
        displayName: facilityTypes From Fc
        post:
          is: [ secured ]
          description: Fetch fcFacilityType from fc.
          responses:
            200:

      /cps:
        displayName: cps From Fc
        post:
          is: [ secured ]
          description: Fetch cps from fc.
          responses:
            200:

      /products:
        displayName: Products From Fc
        post:
          is: [ secured ]
          description: Fetch products from fc.
          queryParameters:
            date:
              displayName: date
              type: string
              required: true
              repeat: false
          responses:
            200:

      /programs:
        displayName: Programs From Fc
        post:
          is: [ secured ]
          description: Fetch cps from fc.
          responses:
            200:

      /regimens:
        displayName: Regimens From Fc
        post:
          is: [ secured ]
          description: Fetch regimens from fc.
          responses:
            200:

      /geographicZones:
        displayName: Sync GeographicZones From Fc
        post:
          is: [ secured ]
          description: Sync GeographicZones From Fc
          responses:
            200:

    /programadditionalorderables:
      displayName: Program Additional Orderable Product
      get:
        is: [ secured, paginated ]
        queryParameters:
          programId:
            displayName: program id
            type: string
            required: true
            repeat: false
          code:
            displayName: orderable code
            type: string
            required: false
            repeat: false
          name:
            displayName: orderable name
            type: string
            required: false
            repeat: false
          orderableOriginProgramId:
            displayName: orderable origin program id
            type: string
            required: false
            repeat: false
        responses:
          200:
            body:
              application/json:
                schema: programAdditionalOrderablePage
      post:
        is: [ secured ]
        description: Create program additional orderables.
        body:
          application/json:
            schema: programAdditionalOrderables
        responses:
          201:
            description: Program additional orderables saved.
      /{id}:
        uriParameters:
          id:
            displayName: id
            type: string
            required: true
            repeat: false
        delete:
          is: [ secured ]
          description: Delete a program additional orderable.
          responses:
            204:
              description: Program additional orderable deleted.

    /management:
      /caches:
        delete:
          is: [ secured ]
          responses:
            204:
              description: cache invalidated.
    /android:

      /regimens:
        get:
          is: [ secured ]
          responses:
            200:
              body:
                application/json:
                  schema: regimenResponse

      /me:

        /facility:
          displayName: get facility info
          get:
            is: [ secured ]
            responses:
              200:
                body:
                  application/json:
                    schema: facilityResponse

          /cmms:
            displayName: create facility cmms info
            post:
              is: [ secured ]
              description: create facility cmms info
              body:
                application/json:
                  schema: hfCmmsDtos
              responses:
                204:
                  description: Full create facility cmms of current facility

          /products:
            displayName: Products of the current facility
            get:
              is: [ secured ]
              queryParameters:
                lastSyncTime:
                  displayName: last sync time
                  type: integer
                  required: false
                  repeat: false
              responses:
                200:
                  body:
                    application/json:
                      schema: productSyncResponse

          /archivedProducts:
            displayName: Archived products of the current facility
            post:
              is: [ secured ]
              description: Archive products of the current facility by product codes
              body:
                application/json:
                  schema: arrayOfStrings
              responses:
                204:
                  description: Full update archived products of current facility

          /stockCards:
            displayName: Submit stock cards
            post:
              is: [ secured ]
              body:
                application/json:
                  schema: arrayOfStrings
              responses:
                201:
                  description: submit success
            get:
              is: [ secured ]
              queryParameters:
                startTime:
                  displayName: start time
                  type: string
                  required: true
                  repeat: false
                endTime:
                  displayName: end time
                  type: string
                  required: true
                  repeat: false
              responses:
                200:
                  body:
                    application/json:
                      schema: facilityProductMovementsResponse

          /requisitions:
            displayName: Submit requisition
            post:
              is: [ secured ]
              body:
                application/json:
                  schema: androidRequisitionRequest
              responses:
                201:
                  description: submit success
            get:
              is: [ secured ]
              queryParameters:
                startDate:
                  displayName: start date
                  type: string
                  required: true
                  repeat: false
              responses:
                200:
                  body:
                    application/json:
                      schema: androidRequisitionResponse

          /pods:
            get:
              is: [ secured ]
              queryParameters:
                startDate:
                  displayName: start date
                  type: string
                  required: true
                  repeat: false
              responses:
                200:
                  body:
                    application/json:
                      schema: androidPodResponse

          /pod:
            patch:
              is: [ secured ]
              description: confirm pod.
              body:
                application/json:
                  schema: androidPodConfirmRequest
              responses:
                200:
                  body:
                    application/json:
                      schema: androidPodConfirmResponse

        /app-info:
          displayName: Process AppInfo
          post:
            is: [ secured ]
            description: save appinfo of the current facility by ficility codes and device unique id
            headers:
              Authorization:
                displayName: Authorization
                description: OAuth2 authorization token header. Takes the form of 'Bearer <token> '.
                type: string
                required: true
                repeat: false
              UserName:
                displayName: UserName
                description: Current username.
                type: string
                required: false
                repeat: false
              FacilityCode:
                displayName: FacilityCode
                description: Current facility code.
                type: string
                required: true
                repeat: false
              FacilityName:
                displayName: FacilityName
                description: Facility name.
                type: string
                required: false
                repeat: false
              UniqueId:
                displayName: UniqueId
                description: device uniqueId.
                type: string
                required: true
                repeat: false
              DeviceInfo:
                displayName: DeviceInfo
                description: DeviceInfo.
                type: string
                required: false
                repeat: false
              VersionCode:
                displayName: VersionCode
                description: VersionCode.
                type: string
                required: false
                repeat: false
              AndroidSDKVersion:
                displayName: AndroidSDKVersion
                description: AndroidSDKVersion.
                type: string
                required: false
                repeat: false
            responses:
              204:
                description: Full update current AppInfo

        /resync-info:
          displayName: Process resyncInfo
          post:
            is: [ secured ]
            description: save resyncInfo when user resync
            headers:
              Authorization:
                displayName: Authorization
                description: OAuth2 authorization token header. Takes the form of 'Bearer <token> '.
                type: string
                required: true
                repeat: false
              UserName:
                displayName: UserName
                description: Current username.
                type: string
                required: false
                repeat: false
              FacilityCode:
                displayName: FacilityCode
                description: Current facility code.
                type: string
                required: false
                repeat: false
              FacilityName:
                displayName: FacilityName
                description: Facility name.
                type: string
                required: false
                repeat: false
              UniqueId:
                displayName: UniqueId
                description: device uniqueId.
                type: string
                required: false
                repeat: false
              DeviceInfo:
                displayName: DeviceInfo
                description: DeviceInfo.
                type: string
                required: false
                repeat: false
              VersionCode:
                displayName: VersionCode
                description: VersionCode.
                type: string
                required: false
                repeat: false
              AndroidSDKVersion:
                displayName: AndroidSDKVersion
                description: AndroidSDKVersion.
                type: string
                required: false
                repeat: false
            responses:
              204:
                description: Save current user ResyncInfo
