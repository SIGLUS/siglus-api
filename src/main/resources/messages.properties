siglusapi.error.validationFail=Validation fail.
siglus.validation.requisition.usageLineItems.missingGroup=Missing group ${groupName}
siglus.validation.requisition.usageLineItems.extraGroups=Extra groups ${groupNames}
siglus.validation.requisition.usageLineItems.columns.missingColumn=Missing column ${columnName} in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.extraColumns=Extra column ${columnNames} in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.duplicateTotalColumns=More than 1 total column in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.missingNonTotalColumns=No columns to sum up in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.sumUpOverflow=Columns sum up overflow in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.sumUpNotMatch=Columns sum is not equals to the total column in group ${groupName}
org.siglus.siglusapi.dto.android.constraints.stockcard.PositiveInitStockOnHand.message=The adjustment with soh[${stockOnHand}] is inconsistent with quantity[${quantity}].
org.siglus.siglusapi.dto.android.constraints.stockcard.StockOnHandConsistentWithQuantityByProduct.message=The product ${productCode} is not consistent \
  ${failedByGap=='true'? 'by gap': formatter.format('on %s(at %s)', date, createdAt)}.
org.siglus.siglusapi.dto.android.constraints.stockcard.StockOnHandConsistentWithQuantityByLot.message=The lot ${lotCode} of the product 08S01Z is not consistent \
  ${failedByGap=='true'? 'by gap': formatter.format('on %s(at %s)', date, createdAt)}.
org.siglus.siglusapi.dto.android.constraints.stockcard.ProductConsistentWithOwnLots.message=The stock card for ${productCode} on ${date}(at ${createdAt}) is inconsistent with its lot events.
org.siglus.siglusapi.dto.android.constraints.stockcard.ProductConsistentWithAllLots.message=The product ${productCode} is not consistent \
  since it has less SOH than the sum its lots' ${formatter.format('on %s(at %s)', date, createdAt)}.
org.siglus.siglusapi.dto.android.constraints.stockcard.KitProductEmptyLots.message=The product ${productCode} should not contain lot events since it's a kit product.
org.siglus.siglusapi.dto.android.constraints.stockcard.NonKitProductNotEmptyLots.message=The product ${productCode} should contain at least one lot event since it's not a kit product.
org.siglus.siglusapi.dto.android.constraints.stockcard.LotStockConsistentWithExisted.message=The ${failedBySoh=='true'? 'SOH': 'occurred date'} \
   of the lot ${lotCode}(of the product ${productCode}) should be ${failedBySoh=='true'? existedSoh: formatter.format('equals to or after %s', existedDate)} but it\'s \
  ${failedBySoh=='true'? soh: date}${failedBySoh=='true'? formatter.format(' on %s', date): ''}.