siglusapi.error.validationFail=Validation fail.
siglus.validation.requisition.usageLineItems.missingGroup=Missing group ${groupName}
siglus.validation.requisition.usageLineItems.extraGroups=Extra groups ${groupNames}
siglus.validation.requisition.usageLineItems.columns.missingColumn=Missing column ${columnName} in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.extraColumns=Extra column ${columnNames} in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.duplicateTotalColumns=More than 1 total column in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.missingNonTotalColumns=No columns to sum up in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.sumUpOverflow=Columns sum up overflow in group ${groupName}
siglus.validation.requisition.usageLineItems.columns.sumUpNotMatch=Columns sum is not equals to the total column in group ${groupName}
org.siglus.siglusapi.dto.android.constraints.StockCardConsistentByProduct.message=The records of the product ${productCode} are not consistent \
  ${failedByGap=='true'? 'by gap': formatter.format('on %s', date)}.
org.siglus.siglusapi.dto.android.constraints.ConsistentStockOnHand.message=The record with soh[${stockOnHand}] is inconsistent with quantity[${quantity}].
org.siglus.siglusapi.dto.android.constraints.ConsistentStockCard.message=The stock card for ${productCode} on ${occurredDate} is inconsistent with its lot events.
org.siglus.siglusapi.dto.android.constraints.StockCardConsistentByLot.message=The lot ${lotNumber} of the product 08S01Z is not consistent \
  ${failedByGap=='true'? 'by gap': formatter.format('on %s', date)}.